import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';
import React, { forwardRef, useState } from 'react';
import PropTypes from 'prop-types';
import classNames from '../../_virtual/index.js';
import { CSidebarNavContext } from './CSidebarNavContext.js';

var isNavElement = function (child) {
    if (!React.isValidElement(child))
        return false;
    var type = child.type;
    return (type.displayName === 'CNavGroup' ||
        type.displayName === 'CNavLink' ||
        type.displayName === 'CNavItem');
};
var recursiveClone = function (children, id, updateId) {
    return React.Children.map(children, function (child, index) {
        if (!isNavElement(child)) {
            return child;
        }
        var _id = id ? (updateId ? "".concat(id, ".").concat(index) : "".concat(id)) : "".concat(index);
        if (child.props.children) {
            var type = child.type;
            var shouldUpdateId = type.displayName !== 'CNavItem';
            return React.cloneElement(child, {
                idx: _id,
                children: recursiveClone(child.props.children, _id, shouldUpdateId),
            });
        }
        return React.cloneElement(child, {
            idx: _id,
        });
    });
};
var CSidebarNav = forwardRef(function (_a, ref) {
    var children = _a.children, _b = _a.as, Component = _b === void 0 ? 'ul' : _b, className = _a.className, rest = __rest(_a, ["children", "as", "className"]);
    var _c = useState(''), visibleGroup = _c[0], setVisibleGroup = _c[1];
    var CNavContextValues = {
        visibleGroup: visibleGroup,
        setVisibleGroup: setVisibleGroup,
    };
    return (React.createElement(CSidebarNavContext.Provider, { value: CNavContextValues },
        React.createElement(Component, __assign({ className: classNames('sidebar-nav', className), ref: ref }, rest), recursiveClone(children))));
});
CSidebarNav.propTypes = {
    as: PropTypes.elementType,
    children: PropTypes.node,
    className: PropTypes.string,
};
CSidebarNav.displayName = 'CSidebarNav';

export { CSidebarNav };
//# sourceMappingURL=CSidebarNav.js.map
